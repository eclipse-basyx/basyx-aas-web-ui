name: Build and Push Docker Images on Release

on:
  release:
    types: [published]

jobs:
  build-and-push-release:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: eclipsebasyx/aas-gui
      SBOM_FILE: sbom.json

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v5

      # Step 2: Set up Docker Buildx
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Step 4: Extract Release Tag as Date
      - name: Extract Release Tag
        id: extract_tag
        run: |
          # Assuming the release tag is in yymmdd format
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV

      # Step 5: Replace version in Vue settings component
      - name: Replace version in Vue settings component
        run: |
          find src -type f -name "Settings.vue" -exec sed -i -E 's|<v-chip id="version" color="primary".*>v2-[0-9]{6}</v-chip>|<v-chip id="version" color="primary">${{ env.TAG_NAME }}</v-chip>|g' {} +

      # Step 6
      - name: Hide snapshot chip
        run: |
          find src -type f -name "Settings.vue" -exec sed -i -E 's|<v-chip id="snapshot".*>([a-z0-9]{7})</v-chip>|<v-chip id="snapshot">\1</v-chip>|g' {} +

      # Step 7 Commit replaced version
      - name: Commit updated files
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Updates version ${{ env.TAG_NAME }} from release tag"
          git push

      # Step 8: Build and Push Docker Images
      - name: Build and Push Docker Images
        uses: docker/build-push-action@v6
        with:
          context: ./aas-web-ui
          file: ./aas-web-ui/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.TAG_NAME }}
            ${{ env.IMAGE_NAME }}:latest
      
      # Step 9: Generate SBOM with Syft
      - name: Install Syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Generate SBOM
        run: |
          syft ${{ env.IMAGE_NAME }}:${{ env.TAG_NAME }} -o json > ${{ env.SBOM_FILE }}

      # Step 10: Upload SBOM as an Artifact
      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: ${{ env.SBOM_FILE }}

      # Step 11: Verify the Push
      - name: Verify Docker Images
        run: |
          docker pull ${{ env.IMAGE_NAME }}:${{ env.TAG_NAME }}
          docker pull ${{ env.IMAGE_NAME }}:latest
